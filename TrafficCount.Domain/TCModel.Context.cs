//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrafficCount.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrafficCountEntities : DbContext
    {
        public TrafficCountEntities()
            : base("name=TrafficCountEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TCAxlesDetail> TCAxlesDetails { get; set; }
        public virtual DbSet<TCAxlesSummary> TCAxlesSummaries { get; set; }
        public virtual DbSet<TCSpeedDetail> TCSpeedDetails { get; set; }
        public virtual DbSet<TCSpeedSummary> TCSpeedSummaries { get; set; }
        public virtual DbSet<UserName> UserNames { get; set; }
        public virtual DbSet<TCSummary> TCSummaries { get; set; }
        public virtual DbSet<TrafficCountSensor> TrafficCountSensors { get; set; }
    
        public virtual int spDelTCBySiteID(string siteID)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelTCBySiteID", siteIDParameter);
        }
    
        public virtual ObjectResult<string> spFindRoad1(string roadName1)
        {
            var roadName1Parameter = roadName1 != null ?
                new ObjectParameter("RoadName1", roadName1) :
                new ObjectParameter("RoadName1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spFindRoad1", roadName1Parameter);
        }
    
        public virtual ObjectResult<string> spFindRoad2(string roadName1, string roadName2)
        {
            var roadName1Parameter = roadName1 != null ?
                new ObjectParameter("RoadName1", roadName1) :
                new ObjectParameter("RoadName1", typeof(string));
    
            var roadName2Parameter = roadName2 != null ?
                new ObjectParameter("RoadName2", roadName2) :
                new ObjectParameter("RoadName2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spFindRoad2", roadName1Parameter, roadName2Parameter);
        }
    
        public virtual ObjectResult<string> spFindSite(string site)
        {
            var siteParameter = site != null ?
                new ObjectParameter("Site", site) :
                new ObjectParameter("Site", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spFindSite", siteParameter);
        }
    
        public virtual int spFindTWPLegal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFindTWPLegal");
        }
    
        public virtual int spInsertTCAxlesDetails(ObjectParameter iD, string siteID, string lane, string bound, Nullable<System.DateTime> timeStart, Nullable<System.DateTime> timeEnd, string timeCaptured, string location, Nullable<int> motorCycles, Nullable<int> passengerCars, Nullable<int> twoAxleFourTires, Nullable<int> buses, Nullable<int> twoAxleSixTires, Nullable<int> threeAxleSingleUnitTruck, Nullable<int> fourOrMoreAxleSignleUnitTruck, Nullable<int> fourOrLessAxleSingleTrailerTruck, Nullable<int> fiveAxleSignleTrailerTruck, Nullable<int> sixOrMoreAxleSignleTrailerTruck, Nullable<int> fiveLessAxleMultiTrailerTruck, Nullable<int> sixAxleMultiTrailerTruck, Nullable<int> sevenMoreAxleMultiTrailerTruck, Nullable<double> spMean, Nullable<double> vpp85)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var boundParameter = bound != null ?
                new ObjectParameter("Bound", bound) :
                new ObjectParameter("Bound", typeof(string));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeCapturedParameter = timeCaptured != null ?
                new ObjectParameter("TimeCaptured", timeCaptured) :
                new ObjectParameter("TimeCaptured", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var motorCyclesParameter = motorCycles.HasValue ?
                new ObjectParameter("MotorCycles", motorCycles) :
                new ObjectParameter("MotorCycles", typeof(int));
    
            var passengerCarsParameter = passengerCars.HasValue ?
                new ObjectParameter("PassengerCars", passengerCars) :
                new ObjectParameter("PassengerCars", typeof(int));
    
            var twoAxleFourTiresParameter = twoAxleFourTires.HasValue ?
                new ObjectParameter("TwoAxleFourTires", twoAxleFourTires) :
                new ObjectParameter("TwoAxleFourTires", typeof(int));
    
            var busesParameter = buses.HasValue ?
                new ObjectParameter("Buses", buses) :
                new ObjectParameter("Buses", typeof(int));
    
            var twoAxleSixTiresParameter = twoAxleSixTires.HasValue ?
                new ObjectParameter("TwoAxleSixTires", twoAxleSixTires) :
                new ObjectParameter("TwoAxleSixTires", typeof(int));
    
            var threeAxleSingleUnitTruckParameter = threeAxleSingleUnitTruck.HasValue ?
                new ObjectParameter("ThreeAxleSingleUnitTruck", threeAxleSingleUnitTruck) :
                new ObjectParameter("ThreeAxleSingleUnitTruck", typeof(int));
    
            var fourOrMoreAxleSignleUnitTruckParameter = fourOrMoreAxleSignleUnitTruck.HasValue ?
                new ObjectParameter("FourOrMoreAxleSignleUnitTruck", fourOrMoreAxleSignleUnitTruck) :
                new ObjectParameter("FourOrMoreAxleSignleUnitTruck", typeof(int));
    
            var fourOrLessAxleSingleTrailerTruckParameter = fourOrLessAxleSingleTrailerTruck.HasValue ?
                new ObjectParameter("FourOrLessAxleSingleTrailerTruck", fourOrLessAxleSingleTrailerTruck) :
                new ObjectParameter("FourOrLessAxleSingleTrailerTruck", typeof(int));
    
            var fiveAxleSignleTrailerTruckParameter = fiveAxleSignleTrailerTruck.HasValue ?
                new ObjectParameter("FiveAxleSignleTrailerTruck", fiveAxleSignleTrailerTruck) :
                new ObjectParameter("FiveAxleSignleTrailerTruck", typeof(int));
    
            var sixOrMoreAxleSignleTrailerTruckParameter = sixOrMoreAxleSignleTrailerTruck.HasValue ?
                new ObjectParameter("SixOrMoreAxleSignleTrailerTruck", sixOrMoreAxleSignleTrailerTruck) :
                new ObjectParameter("SixOrMoreAxleSignleTrailerTruck", typeof(int));
    
            var fiveLessAxleMultiTrailerTruckParameter = fiveLessAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("FiveLessAxleMultiTrailerTruck", fiveLessAxleMultiTrailerTruck) :
                new ObjectParameter("FiveLessAxleMultiTrailerTruck", typeof(int));
    
            var sixAxleMultiTrailerTruckParameter = sixAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("SixAxleMultiTrailerTruck", sixAxleMultiTrailerTruck) :
                new ObjectParameter("SixAxleMultiTrailerTruck", typeof(int));
    
            var sevenMoreAxleMultiTrailerTruckParameter = sevenMoreAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("SevenMoreAxleMultiTrailerTruck", sevenMoreAxleMultiTrailerTruck) :
                new ObjectParameter("SevenMoreAxleMultiTrailerTruck", typeof(int));
    
            var spMeanParameter = spMean.HasValue ?
                new ObjectParameter("SpMean", spMean) :
                new ObjectParameter("SpMean", typeof(double));
    
            var vpp85Parameter = vpp85.HasValue ?
                new ObjectParameter("Vpp85", vpp85) :
                new ObjectParameter("Vpp85", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTCAxlesDetails", iD, siteIDParameter, laneParameter, boundParameter, timeStartParameter, timeEndParameter, timeCapturedParameter, locationParameter, motorCyclesParameter, passengerCarsParameter, twoAxleFourTiresParameter, busesParameter, twoAxleSixTiresParameter, threeAxleSingleUnitTruckParameter, fourOrMoreAxleSignleUnitTruckParameter, fourOrLessAxleSingleTrailerTruckParameter, fiveAxleSignleTrailerTruckParameter, sixOrMoreAxleSignleTrailerTruckParameter, fiveLessAxleMultiTrailerTruckParameter, sixAxleMultiTrailerTruckParameter, sevenMoreAxleMultiTrailerTruckParameter, spMeanParameter, vpp85Parameter);
        }
    
        public virtual int spInsertTCAxlesSummary(ObjectParameter iD, string siteID, string lane, string bound, Nullable<System.DateTime> timeStart, Nullable<System.DateTime> timeEnd, string timeCaptured, string location, Nullable<int> motorCycles, Nullable<int> passengerCars, Nullable<int> twoAxleFourTires, Nullable<int> buses, Nullable<int> twoAxleSixTires, Nullable<int> threeAxleSingleUnitTruck, Nullable<int> fourOrMoreAxleSignleUnitTruck, Nullable<int> fourOrLessAxleSingleTrailerTruck, Nullable<int> fiveAxleSignleTrailerTruck, Nullable<int> sixOrMoreAxleSignleTrailerTruck, Nullable<int> fiveLessAxleMultiTrailerTruck, Nullable<int> sixAxleMultiTrailerTruck, Nullable<int> sevenMoreAxleMultiTrailerTruck, Nullable<double> spMean, Nullable<double> vpp85)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var boundParameter = bound != null ?
                new ObjectParameter("Bound", bound) :
                new ObjectParameter("Bound", typeof(string));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeCapturedParameter = timeCaptured != null ?
                new ObjectParameter("TimeCaptured", timeCaptured) :
                new ObjectParameter("TimeCaptured", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var motorCyclesParameter = motorCycles.HasValue ?
                new ObjectParameter("MotorCycles", motorCycles) :
                new ObjectParameter("MotorCycles", typeof(int));
    
            var passengerCarsParameter = passengerCars.HasValue ?
                new ObjectParameter("PassengerCars", passengerCars) :
                new ObjectParameter("PassengerCars", typeof(int));
    
            var twoAxleFourTiresParameter = twoAxleFourTires.HasValue ?
                new ObjectParameter("TwoAxleFourTires", twoAxleFourTires) :
                new ObjectParameter("TwoAxleFourTires", typeof(int));
    
            var busesParameter = buses.HasValue ?
                new ObjectParameter("Buses", buses) :
                new ObjectParameter("Buses", typeof(int));
    
            var twoAxleSixTiresParameter = twoAxleSixTires.HasValue ?
                new ObjectParameter("TwoAxleSixTires", twoAxleSixTires) :
                new ObjectParameter("TwoAxleSixTires", typeof(int));
    
            var threeAxleSingleUnitTruckParameter = threeAxleSingleUnitTruck.HasValue ?
                new ObjectParameter("ThreeAxleSingleUnitTruck", threeAxleSingleUnitTruck) :
                new ObjectParameter("ThreeAxleSingleUnitTruck", typeof(int));
    
            var fourOrMoreAxleSignleUnitTruckParameter = fourOrMoreAxleSignleUnitTruck.HasValue ?
                new ObjectParameter("FourOrMoreAxleSignleUnitTruck", fourOrMoreAxleSignleUnitTruck) :
                new ObjectParameter("FourOrMoreAxleSignleUnitTruck", typeof(int));
    
            var fourOrLessAxleSingleTrailerTruckParameter = fourOrLessAxleSingleTrailerTruck.HasValue ?
                new ObjectParameter("FourOrLessAxleSingleTrailerTruck", fourOrLessAxleSingleTrailerTruck) :
                new ObjectParameter("FourOrLessAxleSingleTrailerTruck", typeof(int));
    
            var fiveAxleSignleTrailerTruckParameter = fiveAxleSignleTrailerTruck.HasValue ?
                new ObjectParameter("FiveAxleSignleTrailerTruck", fiveAxleSignleTrailerTruck) :
                new ObjectParameter("FiveAxleSignleTrailerTruck", typeof(int));
    
            var sixOrMoreAxleSignleTrailerTruckParameter = sixOrMoreAxleSignleTrailerTruck.HasValue ?
                new ObjectParameter("SixOrMoreAxleSignleTrailerTruck", sixOrMoreAxleSignleTrailerTruck) :
                new ObjectParameter("SixOrMoreAxleSignleTrailerTruck", typeof(int));
    
            var fiveLessAxleMultiTrailerTruckParameter = fiveLessAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("FiveLessAxleMultiTrailerTruck", fiveLessAxleMultiTrailerTruck) :
                new ObjectParameter("FiveLessAxleMultiTrailerTruck", typeof(int));
    
            var sixAxleMultiTrailerTruckParameter = sixAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("SixAxleMultiTrailerTruck", sixAxleMultiTrailerTruck) :
                new ObjectParameter("SixAxleMultiTrailerTruck", typeof(int));
    
            var sevenMoreAxleMultiTrailerTruckParameter = sevenMoreAxleMultiTrailerTruck.HasValue ?
                new ObjectParameter("SevenMoreAxleMultiTrailerTruck", sevenMoreAxleMultiTrailerTruck) :
                new ObjectParameter("SevenMoreAxleMultiTrailerTruck", typeof(int));
    
            var spMeanParameter = spMean.HasValue ?
                new ObjectParameter("SpMean", spMean) :
                new ObjectParameter("SpMean", typeof(double));
    
            var vpp85Parameter = vpp85.HasValue ?
                new ObjectParameter("Vpp85", vpp85) :
                new ObjectParameter("Vpp85", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTCAxlesSummary", iD, siteIDParameter, laneParameter, boundParameter, timeStartParameter, timeEndParameter, timeCapturedParameter, locationParameter, motorCyclesParameter, passengerCarsParameter, twoAxleFourTiresParameter, busesParameter, twoAxleSixTiresParameter, threeAxleSingleUnitTruckParameter, fourOrMoreAxleSignleUnitTruckParameter, fourOrLessAxleSingleTrailerTruckParameter, fiveAxleSignleTrailerTruckParameter, sixOrMoreAxleSignleTrailerTruckParameter, fiveLessAxleMultiTrailerTruckParameter, sixAxleMultiTrailerTruckParameter, sevenMoreAxleMultiTrailerTruckParameter, spMeanParameter, vpp85Parameter);
        }
    
        public virtual int spInsertTCSpeedDetails(ObjectParameter iD, string siteID, string lane, string bound, Nullable<System.DateTime> timeStart, Nullable<System.DateTime> timeEnd, string timeCaptured, string location, Nullable<int> sp0To10, Nullable<int> sp10To20, Nullable<int> sp20To30, Nullable<int> sp30To40, Nullable<int> sp40To50, Nullable<int> sp50To60, Nullable<int> sp60To70, Nullable<int> sp70To80, Nullable<int> sp80To90, Nullable<int> sp90To100, Nullable<int> sp100To110, Nullable<int> sp110To120, Nullable<int> sp120To130, Nullable<int> sp130To140, Nullable<int> sp140To150, Nullable<int> sp150To160, Nullable<int> sp160To200, Nullable<double> spMean, Nullable<double> vpp85)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var boundParameter = bound != null ?
                new ObjectParameter("Bound", bound) :
                new ObjectParameter("Bound", typeof(string));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeCapturedParameter = timeCaptured != null ?
                new ObjectParameter("TimeCaptured", timeCaptured) :
                new ObjectParameter("TimeCaptured", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var sp0To10Parameter = sp0To10.HasValue ?
                new ObjectParameter("Sp0To10", sp0To10) :
                new ObjectParameter("Sp0To10", typeof(int));
    
            var sp10To20Parameter = sp10To20.HasValue ?
                new ObjectParameter("Sp10To20", sp10To20) :
                new ObjectParameter("Sp10To20", typeof(int));
    
            var sp20To30Parameter = sp20To30.HasValue ?
                new ObjectParameter("Sp20To30", sp20To30) :
                new ObjectParameter("Sp20To30", typeof(int));
    
            var sp30To40Parameter = sp30To40.HasValue ?
                new ObjectParameter("Sp30To40", sp30To40) :
                new ObjectParameter("Sp30To40", typeof(int));
    
            var sp40To50Parameter = sp40To50.HasValue ?
                new ObjectParameter("Sp40To50", sp40To50) :
                new ObjectParameter("Sp40To50", typeof(int));
    
            var sp50To60Parameter = sp50To60.HasValue ?
                new ObjectParameter("Sp50To60", sp50To60) :
                new ObjectParameter("Sp50To60", typeof(int));
    
            var sp60To70Parameter = sp60To70.HasValue ?
                new ObjectParameter("Sp60To70", sp60To70) :
                new ObjectParameter("Sp60To70", typeof(int));
    
            var sp70To80Parameter = sp70To80.HasValue ?
                new ObjectParameter("Sp70To80", sp70To80) :
                new ObjectParameter("Sp70To80", typeof(int));
    
            var sp80To90Parameter = sp80To90.HasValue ?
                new ObjectParameter("Sp80To90", sp80To90) :
                new ObjectParameter("Sp80To90", typeof(int));
    
            var sp90To100Parameter = sp90To100.HasValue ?
                new ObjectParameter("Sp90To100", sp90To100) :
                new ObjectParameter("Sp90To100", typeof(int));
    
            var sp100To110Parameter = sp100To110.HasValue ?
                new ObjectParameter("Sp100To110", sp100To110) :
                new ObjectParameter("Sp100To110", typeof(int));
    
            var sp110To120Parameter = sp110To120.HasValue ?
                new ObjectParameter("Sp110To120", sp110To120) :
                new ObjectParameter("Sp110To120", typeof(int));
    
            var sp120To130Parameter = sp120To130.HasValue ?
                new ObjectParameter("Sp120To130", sp120To130) :
                new ObjectParameter("Sp120To130", typeof(int));
    
            var sp130To140Parameter = sp130To140.HasValue ?
                new ObjectParameter("Sp130To140", sp130To140) :
                new ObjectParameter("Sp130To140", typeof(int));
    
            var sp140To150Parameter = sp140To150.HasValue ?
                new ObjectParameter("Sp140To150", sp140To150) :
                new ObjectParameter("Sp140To150", typeof(int));
    
            var sp150To160Parameter = sp150To160.HasValue ?
                new ObjectParameter("Sp150To160", sp150To160) :
                new ObjectParameter("Sp150To160", typeof(int));
    
            var sp160To200Parameter = sp160To200.HasValue ?
                new ObjectParameter("Sp160To200", sp160To200) :
                new ObjectParameter("Sp160To200", typeof(int));
    
            var spMeanParameter = spMean.HasValue ?
                new ObjectParameter("SpMean", spMean) :
                new ObjectParameter("SpMean", typeof(double));
    
            var vpp85Parameter = vpp85.HasValue ?
                new ObjectParameter("Vpp85", vpp85) :
                new ObjectParameter("Vpp85", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTCSpeedDetails", iD, siteIDParameter, laneParameter, boundParameter, timeStartParameter, timeEndParameter, timeCapturedParameter, locationParameter, sp0To10Parameter, sp10To20Parameter, sp20To30Parameter, sp30To40Parameter, sp40To50Parameter, sp50To60Parameter, sp60To70Parameter, sp70To80Parameter, sp80To90Parameter, sp90To100Parameter, sp100To110Parameter, sp110To120Parameter, sp120To130Parameter, sp130To140Parameter, sp140To150Parameter, sp150To160Parameter, sp160To200Parameter, spMeanParameter, vpp85Parameter);
        }
    
        public virtual int spInsertTCSpeedSummary(ObjectParameter iD, string siteID, string lane, string bound, Nullable<System.DateTime> timeStart, Nullable<System.DateTime> timeEnd, string timeCaptured, string location, Nullable<int> sp0To10, Nullable<int> sp10To20, Nullable<int> sp20To30, Nullable<int> sp30To40, Nullable<int> sp40To50, Nullable<int> sp50To60, Nullable<int> sp60To70, Nullable<int> sp70To80, Nullable<int> sp80To90, Nullable<int> sp90To100, Nullable<int> sp100To110, Nullable<int> sp110To120, Nullable<int> sp120To130, Nullable<int> sp130To140, Nullable<int> sp140To150, Nullable<int> sp150To160, Nullable<int> sp160To200, Nullable<double> spMean, Nullable<double> vpp85)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var laneParameter = lane != null ?
                new ObjectParameter("Lane", lane) :
                new ObjectParameter("Lane", typeof(string));
    
            var boundParameter = bound != null ?
                new ObjectParameter("Bound", bound) :
                new ObjectParameter("Bound", typeof(string));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeCapturedParameter = timeCaptured != null ?
                new ObjectParameter("TimeCaptured", timeCaptured) :
                new ObjectParameter("TimeCaptured", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var sp0To10Parameter = sp0To10.HasValue ?
                new ObjectParameter("Sp0To10", sp0To10) :
                new ObjectParameter("Sp0To10", typeof(int));
    
            var sp10To20Parameter = sp10To20.HasValue ?
                new ObjectParameter("Sp10To20", sp10To20) :
                new ObjectParameter("Sp10To20", typeof(int));
    
            var sp20To30Parameter = sp20To30.HasValue ?
                new ObjectParameter("Sp20To30", sp20To30) :
                new ObjectParameter("Sp20To30", typeof(int));
    
            var sp30To40Parameter = sp30To40.HasValue ?
                new ObjectParameter("Sp30To40", sp30To40) :
                new ObjectParameter("Sp30To40", typeof(int));
    
            var sp40To50Parameter = sp40To50.HasValue ?
                new ObjectParameter("Sp40To50", sp40To50) :
                new ObjectParameter("Sp40To50", typeof(int));
    
            var sp50To60Parameter = sp50To60.HasValue ?
                new ObjectParameter("Sp50To60", sp50To60) :
                new ObjectParameter("Sp50To60", typeof(int));
    
            var sp60To70Parameter = sp60To70.HasValue ?
                new ObjectParameter("Sp60To70", sp60To70) :
                new ObjectParameter("Sp60To70", typeof(int));
    
            var sp70To80Parameter = sp70To80.HasValue ?
                new ObjectParameter("Sp70To80", sp70To80) :
                new ObjectParameter("Sp70To80", typeof(int));
    
            var sp80To90Parameter = sp80To90.HasValue ?
                new ObjectParameter("Sp80To90", sp80To90) :
                new ObjectParameter("Sp80To90", typeof(int));
    
            var sp90To100Parameter = sp90To100.HasValue ?
                new ObjectParameter("Sp90To100", sp90To100) :
                new ObjectParameter("Sp90To100", typeof(int));
    
            var sp100To110Parameter = sp100To110.HasValue ?
                new ObjectParameter("Sp100To110", sp100To110) :
                new ObjectParameter("Sp100To110", typeof(int));
    
            var sp110To120Parameter = sp110To120.HasValue ?
                new ObjectParameter("Sp110To120", sp110To120) :
                new ObjectParameter("Sp110To120", typeof(int));
    
            var sp120To130Parameter = sp120To130.HasValue ?
                new ObjectParameter("Sp120To130", sp120To130) :
                new ObjectParameter("Sp120To130", typeof(int));
    
            var sp130To140Parameter = sp130To140.HasValue ?
                new ObjectParameter("Sp130To140", sp130To140) :
                new ObjectParameter("Sp130To140", typeof(int));
    
            var sp140To150Parameter = sp140To150.HasValue ?
                new ObjectParameter("Sp140To150", sp140To150) :
                new ObjectParameter("Sp140To150", typeof(int));
    
            var sp150To160Parameter = sp150To160.HasValue ?
                new ObjectParameter("Sp150To160", sp150To160) :
                new ObjectParameter("Sp150To160", typeof(int));
    
            var sp160To200Parameter = sp160To200.HasValue ?
                new ObjectParameter("Sp160To200", sp160To200) :
                new ObjectParameter("Sp160To200", typeof(int));
    
            var spMeanParameter = spMean.HasValue ?
                new ObjectParameter("SpMean", spMean) :
                new ObjectParameter("SpMean", typeof(double));
    
            var vpp85Parameter = vpp85.HasValue ?
                new ObjectParameter("Vpp85", vpp85) :
                new ObjectParameter("Vpp85", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTCSpeedSummary", iD, siteIDParameter, laneParameter, boundParameter, timeStartParameter, timeEndParameter, timeCapturedParameter, locationParameter, sp0To10Parameter, sp10To20Parameter, sp20To30Parameter, sp30To40Parameter, sp40To50Parameter, sp50To60Parameter, sp60To70Parameter, sp70To80Parameter, sp80To90Parameter, sp90To100Parameter, sp100To110Parameter, sp110To120Parameter, sp120To130Parameter, sp130To140Parameter, sp140To150Parameter, sp150To160Parameter, sp160To200Parameter, spMeanParameter, vpp85Parameter);
        }
    
        public virtual int spInsertTCSummary(ObjectParameter iD, string vchSiteID, Nullable<int> intTWP, string vchLocation, Nullable<System.DateTime> dteDateOfCount, Nullable<int> intNumofVehicles, string vchPostedLimit, string vch85Percentile, string vchPercentageTrucks, string road1, string road2, string dir)
        {
            var vchSiteIDParameter = vchSiteID != null ?
                new ObjectParameter("vchSiteID", vchSiteID) :
                new ObjectParameter("vchSiteID", typeof(string));
    
            var intTWPParameter = intTWP.HasValue ?
                new ObjectParameter("intTWP", intTWP) :
                new ObjectParameter("intTWP", typeof(int));
    
            var vchLocationParameter = vchLocation != null ?
                new ObjectParameter("vchLocation", vchLocation) :
                new ObjectParameter("vchLocation", typeof(string));
    
            var dteDateOfCountParameter = dteDateOfCount.HasValue ?
                new ObjectParameter("dteDateOfCount", dteDateOfCount) :
                new ObjectParameter("dteDateOfCount", typeof(System.DateTime));
    
            var intNumofVehiclesParameter = intNumofVehicles.HasValue ?
                new ObjectParameter("intNumofVehicles", intNumofVehicles) :
                new ObjectParameter("intNumofVehicles", typeof(int));
    
            var vchPostedLimitParameter = vchPostedLimit != null ?
                new ObjectParameter("vchPostedLimit", vchPostedLimit) :
                new ObjectParameter("vchPostedLimit", typeof(string));
    
            var vch85PercentileParameter = vch85Percentile != null ?
                new ObjectParameter("vch85Percentile", vch85Percentile) :
                new ObjectParameter("vch85Percentile", typeof(string));
    
            var vchPercentageTrucksParameter = vchPercentageTrucks != null ?
                new ObjectParameter("vchPercentageTrucks", vchPercentageTrucks) :
                new ObjectParameter("vchPercentageTrucks", typeof(string));
    
            var road1Parameter = road1 != null ?
                new ObjectParameter("Road1", road1) :
                new ObjectParameter("Road1", typeof(string));
    
            var road2Parameter = road2 != null ?
                new ObjectParameter("Road2", road2) :
                new ObjectParameter("Road2", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertTCSummary", iD, vchSiteIDParameter, intTWPParameter, vchLocationParameter, dteDateOfCountParameter, intNumofVehiclesParameter, vchPostedLimitParameter, vch85PercentileParameter, vchPercentageTrucksParameter, road1Parameter, road2Parameter, dirParameter);
        }
    
        public virtual ObjectResult<spTCAxlesDetails_Result> spTCAxlesDetails(string siteID, Nullable<System.DateTime> dateCapture)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var dateCaptureParameter = dateCapture.HasValue ?
                new ObjectParameter("DateCapture", dateCapture) :
                new ObjectParameter("DateCapture", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCAxlesDetails_Result>("spTCAxlesDetails", siteIDParameter, dateCaptureParameter);
        }
    
        public virtual ObjectResult<spTCAxlesSummaryBySite_Result> spTCAxlesSummaryBySite(string siteID)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCAxlesSummaryBySite_Result>("spTCAxlesSummaryBySite", siteIDParameter);
        }
    
        public virtual ObjectResult<spTCSpeedDetails_Result> spTCSpeedDetails(string siteID, Nullable<System.DateTime> dateCapture)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            var dateCaptureParameter = dateCapture.HasValue ?
                new ObjectParameter("DateCapture", dateCapture) :
                new ObjectParameter("DateCapture", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCSpeedDetails_Result>("spTCSpeedDetails", siteIDParameter, dateCaptureParameter);
        }
    
        public virtual ObjectResult<spTCSpeedSummaryBySite_Result> spTCSpeedSummaryBySite(string siteID)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCSpeedSummaryBySite_Result>("spTCSpeedSummaryBySite", siteIDParameter);
        }
    
        public virtual ObjectResult<spTCSummaryByLoc_Result> spTCSummaryByLoc(string road1, string road2, string dir)
        {
            var road1Parameter = road1 != null ?
                new ObjectParameter("Road1", road1) :
                new ObjectParameter("Road1", typeof(string));
    
            var road2Parameter = road2 != null ?
                new ObjectParameter("Road2", road2) :
                new ObjectParameter("Road2", typeof(string));
    
            var dirParameter = dir != null ?
                new ObjectParameter("Dir", dir) :
                new ObjectParameter("Dir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCSummaryByLoc_Result>("spTCSummaryByLoc", road1Parameter, road2Parameter, dirParameter);
        }
    
        public virtual ObjectResult<spTCSummaryBySite_Result> spTCSummaryBySite(string siteID)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCSummaryBySite_Result>("spTCSummaryBySite", siteIDParameter);
        }
    
        public virtual ObjectResult<spTCSummaryOneBySite_Result> spTCSummaryOneBySite(string siteID)
        {
            var siteIDParameter = siteID != null ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spTCSummaryOneBySite_Result>("spTCSummaryOneBySite", siteIDParameter);
        }
    
        public virtual int spUpdateTCSummaryLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateTCSummaryLocation");
        }
    
        public virtual int spUpdateTrafficCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateTrafficCount");
        }
    }
}
